{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2022-12-29T07:56:10.871Z",
    "end": "2022-12-29T07:56:13.106Z",
    "duration": 2235,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0f86f49d-6bd3-436d-978f-248aae210d8e",
      "title": "",
      "fullFile": "D:\\api-herokuapp\\Api-Otomation-bigProject\\tests\\scenarios\\getbooking.test.js",
      "file": "\\tests\\scenarios\\getbooking.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "01364695-b8a9-41a4-89b6-0a7c81a59be8",
          "title": "BOOKING ID 1",
          "fullFile": "D:\\api-herokuapp\\Api-Otomation-bigProject\\tests\\scenarios\\getbooking.test.js",
          "file": "\\tests\\scenarios\\getbooking.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successfull get the booking of data with id = 1",
              "fullTitle": "BOOKING ID 1 Should successfull get the booking of data with id = 1",
              "timedOut": false,
              "duration": 1441,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await HerokuApi.booking(data.BOOKING_PARAM);\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "832930a3-848c-4273-aeee-cb4997383946",
              "parentUUID": "01364695-b8a9-41a4-89b6-0a7c81a59be8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not successfull get the booking of data with invalid id = A",
              "fullTitle": "BOOKING ID 1 Should not successfull get the booking of data with invalid id = A",
              "timedOut": false,
              "duration": 774,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await HerokuApi.bookingInvalidId(data.INVALID_BOOKING_PARAM);\nassert.equal(response.status, 404);",
              "err": {},
              "uuid": "bd9f2c62-410b-484c-a29f-015176e05d62",
              "parentUUID": "01364695-b8a9-41a4-89b6-0a7c81a59be8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "832930a3-848c-4273-aeee-cb4997383946",
            "bd9f2c62-410b-484c-a29f-015176e05d62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2215,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}