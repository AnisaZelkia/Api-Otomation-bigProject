{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2022-12-27T06:44:54.963Z",
    "end": "2022-12-27T06:45:00.207Z",
    "duration": 5244,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7f84ba03-a2bb-4860-ad12-a3788f3c2416",
      "title": "",
      "fullFile": "D:\\api-herokuapp\\Api-Otomation-bigProject\\tests\\scenarios\\createBooking.test.js",
      "file": "\\tests\\scenarios\\createBooking.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f4413bae-8d79-4af5-a1c2-bda2b4c864a0",
          "title": "Create Data Booking",
          "fullFile": "D:\\api-herokuapp\\Api-Otomation-bigProject\\tests\\scenarios\\createBooking.test.js",
          "file": "\\tests\\scenarios\\createBooking.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successful login when insert valid data",
              "fullTitle": "Create Data Booking Should successful login when insert valid data",
              "timedOut": false,
              "duration": 1141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await HerokuApi.bookingcreate(data.bookingdata);\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "c58e9ae1-ec94-49e2-8c0a-73413f58c2fe",
              "parentUUID": "f4413bae-8d79-4af5-a1c2-bda2b4c864a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not successful login when insert invalid first name data",
              "fullTitle": "Create Data Booking Should not successful login when insert invalid first name data",
              "timedOut": false,
              "duration": 889,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await HerokuApi.bookingcreate(data.bookingdata1);\nassert.equal(response.status, 500);",
              "err": {},
              "uuid": "0c7d8a12-2730-430c-b7e2-dedc9a76a524",
              "parentUUID": "f4413bae-8d79-4af5-a1c2-bda2b4c864a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not successful login when insert invalid last name data",
              "fullTitle": "Create Data Booking Should not successful login when insert invalid last name data",
              "timedOut": false,
              "duration": 782,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await HerokuApi.bookingcreate(data.bookingdata2);\nassert.equal(response.status, 500);",
              "err": {},
              "uuid": "f02bb0c7-3220-43a8-9f4c-9c9c65695d8a",
              "parentUUID": "f4413bae-8d79-4af5-a1c2-bda2b4c864a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not successful login when insert invalid total price data",
              "fullTitle": "Create Data Booking Should not successful login when insert invalid total price data",
              "timedOut": false,
              "duration": 771,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await HerokuApi.bookingcreate(data.bookingdata3);\nassert.equal(response.status, 500);",
              "err": {},
              "uuid": "a3256a78-255f-4c3c-b2a3-c5d187be49c5",
              "parentUUID": "f4413bae-8d79-4af5-a1c2-bda2b4c864a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not successful login when insert invalid check in data",
              "fullTitle": "Create Data Booking Should not successful login when insert invalid check in data",
              "timedOut": false,
              "duration": 811,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await HerokuApi.bookingcreate(data.bookingdata4);\nassert.equal(response.status, 500);",
              "err": {},
              "uuid": "6dbc7c5c-cc53-42a9-a422-fc90b4740eae",
              "parentUUID": "f4413bae-8d79-4af5-a1c2-bda2b4c864a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not successful login when insert invalid check out data",
              "fullTitle": "Create Data Booking Should not successful login when insert invalid check out data",
              "timedOut": false,
              "duration": 778,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await HerokuApi.bookingcreate(data.bookingdata5);\nassert.equal(response.status, 500);",
              "err": {},
              "uuid": "10234fb9-4374-4091-b457-aba40090ba92",
              "parentUUID": "f4413bae-8d79-4af5-a1c2-bda2b4c864a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c58e9ae1-ec94-49e2-8c0a-73413f58c2fe",
            "0c7d8a12-2730-430c-b7e2-dedc9a76a524",
            "f02bb0c7-3220-43a8-9f4c-9c9c65695d8a",
            "a3256a78-255f-4c3c-b2a3-c5d187be49c5",
            "6dbc7c5c-cc53-42a9-a422-fc90b4740eae",
            "10234fb9-4374-4091-b457-aba40090ba92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5172,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}